---
- name: Setup Maintenance Instance
  hosts: maintenance
  become: yes  # Use sudo
  tasks:
    # - name: Wait for apt to be available
    #   pause:
    #     seconds: 60  # Adjust the number of seconds based on your needs
    #
    # from @antonioribeiro on https://github.com/ansible/ansible/issues/51663
    # To prevent frontend lock error blocking ansible from running playbook in ubuntu
    # - name: Remove apt lock file
    #   file:
    #     state: absent
    #     path: "/var/lib/dpkg/lock-frontend"
    #   become: true
    #   tags: apt
    - name: Wait until apt is ready before installing Ansible
      shell: |
        while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
          echo "Waiting for dpkg lock to be released..."
          sleep 10
        done
      retries: 12  # Retry 12 times (with increasing wait)
      delay: 10  # Initial delay between retries in seconds
      register: apt_lock_check
      until: apt_lock_check.rc == 0
      ignore_errors: true

    - name: Optional - Kill stuck apt process if it's still running (use with caution)
      shell: "kill -9 $(fuser /var/lib/dpkg/lock-frontend 2>/dev/null | awk '{print $2}')"
      when: apt_lock_check.rc != 0
      ignore_errors: true

    - name: Ensure Ansible is installed
      apt:
        name: ansible
        state: present
        update_cache: yes

    - name: Clone the Git repository
      git:
        repo: https://github.com/Tassianna/restaurant-app.git  
        dest: /home/ubuntu/restaurant-app 
        clone: yes
        force: yes  
        update: true

    - name: Copy london.key to maintenance instance
      copy:
        src: "{{ local_key }}" # this is passed via playbook command in automated script
        dest: /home/ubuntu/london_key.pem

    # Use ansible builtin file to change permissions and owner of key
    - name: Change Owner and permissions of key
      ansible.builtin.file:
        path: /home/ubuntu/london_key.pem
        owner: ubuntu 
        group: ubuntu
        mode: '0600'

    # Use retrieved values from terraform output to create new hosts file in cloned repository
    - name: Creating a host file with content
      copy:
        dest: "/home/ubuntu/restaurant-app/ansible/hosts"
        content: |

          [backend]
          items ansible_host={{ items }} elb={{ items_elb }} elb_name=items_elb port=3003 ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/london_key.pem
          auth ansible_host={{ auth }} elb={{ auth_elb }} elb_name=auth_elb port=3001 ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/london_key.pem
          discounts ansible_host={{ discounts }} elb={{ discounts_elb }} elb_name=discounts_elb  port=3002 ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/london_key.pem
          frontend ansible_host={{ frontend }} elb_name="" port=3000 ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/london_key.pem

          [haproxy]
          haproxy ansible_host={{ haproxy }} ansible_user=ubuntu ansible_ssh_private_key_file=/home/ubuntu/london_key.pem

